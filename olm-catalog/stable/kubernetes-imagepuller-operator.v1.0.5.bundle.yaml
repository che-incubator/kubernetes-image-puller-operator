#
# Copyright (c) 2019-2023 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#


image: quay.io/eclipse/kubernetes-image-puller-operator-bundle:1.0.5
name: kubernetes-imagepuller-operator.v1.0.5
package: kubernetes-imagepuller-operator
properties:
- type: olm.gvk
  value:
    group: che.eclipse.org
    kind: KubernetesImagePuller
    version: v1alpha1
- type: olm.package
  value:
    packageName: kubernetes-imagepuller-operator
    version: 1.0.5
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjcuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Imt1YmVybmV0ZXNpbWFnZXB1bGxlcnMuY2hlLmVjbGlwc2Uub3JnIn0sInNwZWMiOnsiZ3JvdXAiOiJjaGUuZWNsaXBzZS5vcmciLCJuYW1lcyI6eyJraW5kIjoiS3ViZXJuZXRlc0ltYWdlUHVsbGVyIiwibGlzdEtpbmQiOiJLdWJlcm5ldGVzSW1hZ2VQdWxsZXJMaXN0IiwicGx1cmFsIjoia3ViZXJuZXRlc2ltYWdlcHVsbGVycyIsInNpbmd1bGFyIjoia3ViZXJuZXRlc2ltYWdlcHVsbGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiS3ViZXJuZXRlc0ltYWdlUHVsbGVyIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBrdWJlcm5ldGVzaW1hZ2VwdWxsZXJzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiS3ViZXJuZXRlc0ltYWdlUHVsbGVyU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEt1YmVybmV0ZXNJbWFnZVB1bGxlciIsInByb3BlcnRpZXMiOnsiYWZmaW5pdHkiOnsidHlwZSI6InN0cmluZyJ9LCJjYWNoaW5nQ1BVTGltaXQiOnsidHlwZSI6InN0cmluZyJ9LCJjYWNoaW5nQ1BVUmVxdWVzdCI6eyJ0eXBlIjoic3RyaW5nIn0sImNhY2hpbmdJbnRlcnZhbEhvdXJzIjp7InR5cGUiOiJzdHJpbmcifSwiY2FjaGluZ01lbW9yeUxpbWl0Ijp7InR5cGUiOiJzdHJpbmcifSwiY2FjaGluZ01lbW9yeVJlcXVlc3QiOnsidHlwZSI6InN0cmluZyJ9LCJjb25maWdNYXBOYW1lIjp7InR5cGUiOiJzdHJpbmcifSwiZGFlbW9uc2V0TmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sImRlcGxveW1lbnROYW1lIjp7InR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJ0eXBlIjoic3RyaW5nIn0sImltYWdlUHVsbGVySW1hZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJpbWFnZXMiOnsidHlwZSI6InN0cmluZyJ9LCJub2RlU2VsZWN0b3IiOnsidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJLdWJlcm5ldGVzSW1hZ2VQdWxsZXJTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgS3ViZXJuZXRlc0ltYWdlUHVsbGVyIiwicHJvcGVydGllcyI6eyJpbWFnZVB1bGxlckltYWdlIjp7ImRlc2NyaXB0aW9uIjoiS3ViZXJuZXRlc0ltYWdlUHVsbGVyIGltYWdlIGluIHVzZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsibmFtZSI6Imt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIn0sIm5hbWUiOiJjb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwcyIsInBvcnQiOjg0NDMsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsibmFtZSI6Imt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY2hlLmVjbGlwc2Uub3JnL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiS3ViZXJuZXRlc0ltYWdlUHVsbGVyXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJpbWFnZS1wdWxsZXJcIlxuICAgIH0sXG4gICAgXCJzcGVjXCI6IHtcbiAgICAgIFwiZGFlbW9uc2V0TmFtZVwiOiBcIms4cy1pbWFnZS1wdWxsZXJcIixcbiAgICAgIFwiaW1hZ2VzXCI6IFwiamF2YTExLW1hdmVuPXF1YXkuaW8vZWNsaXBzZS9jaGUtamF2YTExLW1hdmVuOm5leHQ7Y2hlLXRoZWlhPXF1YXkuaW8vZWNsaXBzZS9jaGUtdGhlaWE6bmV4dFwiXG4gICAgfVxuICB9XG5dIiwiY2FwYWJpbGl0aWVzIjoiU2VhbWxlc3MgVXBncmFkZXMiLCJjYXRlZ29yaWVzIjoiRGV2ZWxvcGVyIFRvb2xzIiwiY2VydGlmaWVkIjoiZmFsc2UiLCJjb250YWluZXJJbWFnZSI6InF1YXkuaW8vZWNsaXBzZS9rdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvcjoxLjAuNSIsImNyZWF0ZWRBdCI6IiIsImRlc2NyaXB0aW9uIjoiQ3JlYXRlIGFuZCBtYW5hZ2Uga3ViZXJuZXRlcy1pbWFnZS1wdWxsZXIgaW5zdGFuY2VzLiIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjkuMCtnaXQiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJnby5rdWJlYnVpbGRlci5pby92MyIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vY2hlLWluY3ViYXRvci9rdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciIsInN1cHBvcnQiOiIifSwibmFtZSI6Imt1YmVybmV0ZXMtaW1hZ2VwdWxsZXItb3BlcmF0b3IudjEuMC41IiwibmFtZXNwYWNlIjoicGxhY2Vob2xkZXIifSwic3BlYyI6eyJhcGlzZXJ2aWNlZGVmaW5pdGlvbnMiOnt9LCJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVybmV0ZXNJbWFnZVB1bGxlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUga3ViZXJuZXRlc2ltYWdlcHVsbGVycyBBUEkiLCJkaXNwbGF5TmFtZSI6Ikt1YmVybmV0ZXMgSW1hZ2UgUHVsbGVyIiwia2luZCI6Ikt1YmVybmV0ZXNJbWFnZVB1bGxlciIsIm5hbWUiOiJrdWJlcm5ldGVzaW1hZ2VwdWxsZXJzLmNoZS5lY2xpcHNlLm9yZyIsInJlc291cmNlcyI6W3sia2luZCI6IkNvbmZpZ01hcCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJEYWVtb25TZXQiLCJuYW1lIjoiIiwidmVyc2lvbiI6ImFwcHMvdjEifSx7ImtpbmQiOiJEZXBsb3ltZW50IiwibmFtZSI6IiIsInZlcnNpb24iOiJhcHBzL3YxIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRpc3BsYXlOYW1lIjoiQWZmaW5pdHkiLCJwYXRoIjoiYWZmaW5pdHkifSx7ImRpc3BsYXlOYW1lIjoiQ2FjaGluZyBDUFUgbGltaXQiLCJwYXRoIjoiY2FjaGluZ0NQVUxpbWl0In0seyJkaXNwbGF5TmFtZSI6IkNhY2hpbmcgQ1BVIHJlcXVlc3QiLCJwYXRoIjoiY2FjaGluZ0NQVVJlcXVlc3QifSx7ImRpc3BsYXlOYW1lIjoiQ2FjaGluZyBpbnRlcm5hbCBob3VycyIsInBhdGgiOiJjYWNoaW5nSW50ZXJ2YWxIb3VycyJ9LHsiZGlzcGxheU5hbWUiOiJDYWNoZSBtZW1vcnkgbGltaXQiLCJwYXRoIjoiY2FjaGluZ01lbW9yeUxpbWl0In0seyJkaXNwbGF5TmFtZSI6IkNhY2hpbmcgbWVtb3J5IHJlcXVlc3QiLCJwYXRoIjoiY2FjaGluZ01lbW9yeVJlcXVlc3QifSx7ImRpc3BsYXlOYW1lIjoiQ29uZmlnTWFwIG5hbWUiLCJwYXRoIjoiY29uZmlnTWFwTmFtZSJ9LHsiZGlzcGxheU5hbWUiOiJEYWVtb25TZXQgbmFtZSIsInBhdGgiOiJkYWVtb25zZXROYW1lIn0seyJkaXNwbGF5TmFtZSI6IkRlcGxveW1lbnQgbmFtZSIsInBhdGgiOiJkZXBsb3ltZW50TmFtZSJ9LHsiZGlzcGxheU5hbWUiOiJJbWFnZVB1bGwgc2VjcmV0cyIsInBhdGgiOiJpbWFnZVB1bGxTZWNyZXRzIn0seyJkaXNwbGF5TmFtZSI6IkltYWdlUHVsbCBuYW1lIiwicGF0aCI6ImltYWdlUHVsbGVySW1hZ2UifSx7ImRpc3BsYXlOYW1lIjoiSW1hZ2VzIHRvIHB1bGwiLCJwYXRoIjoiaW1hZ2VzIn0seyJkaXNwbGF5TmFtZSI6Ik5vZGVTZWxlY3RvciIsInBhdGgiOiJub2RlU2VsZWN0b3IifV0sInN0YXR1c0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6Ikt1YmVybmV0ZXNJbWFnZVB1bGxlciBpbWFnZSBpbiB1c2UuIiwiZGlzcGxheU5hbWUiOiJJbWFnZSIsInBhdGgiOiJpbWFnZVB1bGxlckltYWdlIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6dGV4dCJdfV0sInZlcnNpb24iOiJ2MWFscGhhMSJ9XX0sImRlc2NyaXB0aW9uIjoiIyMgQWJvdXQgdGhlIG1hbmFnZWQgYXBwbGljYXRpb25cblxuQ3JlYXRlIGEgYEt1YmVybmV0ZXNJbWFnZVB1bGxlcmAgY3VzdG9tIHJlc291cmNlIHRvIGF1dG9tYXRpY2FsbHkgY29uZmlndXJlIGFuZCBydW4gYW4gaW5zdGFuY2Ugb2YgdGhlIFtrdWJlcm5ldGVzLWltYWdlLXB1bGxlci5dKGh0dHBzOi8vZ2l0aHViLmNvbS9jaGUtaW5jdWJhdG9yL2t1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyKVxuIyMgQWJvdXQgdGhpcyBPcGVyYXRvclxuXG5UaGUgYEt1YmVybmV0ZXNJbWFnZVB1bGxlcmAgY3VzdG9tIHJlc291cmNlIHVuZGVyc3RhbmRzIHRoZSBmb2xsb3dpbmcgZmllbGRzIGluIHRoZSBgc3BlY2A6XG5cbjEuIGBjb25maWdNYXBOYW1lYCAtIFRoZSBuYW1lIG9mIHRoZSBgQ29uZmlnTWFwYCB0byBjcmVhdGVcdFxuMi4gYGRhZW1vbnNldE5hbWVgIC0gVGhlIG5hbWUgb2YgdGhlIGBEYWVtb25TZXRgIHRvIGJlIGNyZWF0ZS5cbjMuIGBkZXBsb3ltZW50TmFtZWAgLSBUaGUgbmFtZSBvZiB0aGUgYGt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyYCBgRGVwbG95bWVudGAgdG8gY3JlYXRlLlxuNC4gYGltYWdlc2AgLSBBIGxpc3Qgb2Yga2V5LXZhbHVlIHBhaXJzIHNlcGFyYXRlZCBieSBzZW1pY29sb25zIG9mIGltYWdlcyB0byBwdWxsLiAgRm9yIGV4YW1wbGU6IGBqYXZhPXF1YXkuaW8vZWNsaXBzZS9jaGUtamF2YTgtbWF2ZW46bGF0ZXN0O3RoZWlhPXF1YXkuaW8vZWNsaXBzZS9jaGUtdGhlaWE6bmV4dGBcbjUuIGBjYWNoaW5nSW50ZXJ2YWxIb3Vyc2AgLSBUaGUgYW1vdW50IG9mIHRpbWUsIGluIGhvdXJzLCBiZXR3ZWVuIGBEYWVtb25TZXRgIGhlYWx0aCBjaGVja3MuXG42LiBgY2FjaGluZ01lbW9yeVJlcXVlc3RgIC0gVGhlIG1lbW9yeSByZXF1ZXN0IGZvciBlYWNoIGNhY2hlZCBpbWFnZSB3aGVuIHRoZSBwdWxsZXIgaXMgcnVubmluZy5cbjcuIGBjYWNoaW5nTWVtb3J5TGltaXRgIC0gVGhlIG1lbW9yeSBsaW1pdCBmb3IgZWFjaCBjYWNoZWQgaW1hZ2Ugd2hlbiB0aGUgcHVsbGVyIGlzIHJ1bm5pbmcuXG44LiBgbm9kZVNlbGVjdG9yYCAtIE5vZGUgc2VsZWN0b3IgYXBwbGllZCB0byBwb2RzIGNyZWF0ZWQgYnkgdGhlIGBEYWVtb25TZXRgLlxuIyMgUHJlcmVxdWlzaXRlcyBmb3IgZW5hYmxpbmcgdGhpcyBPcGVyYXRvclxuXG5UaGUgb3BlcmF0b3IgcmVxdWlyZXMgYW4gZXhpc3RpbmcgbmFtZXNwYWNlIHRvIGJlIGluc3RhbGxlZCBpbi5cbiIsImRpc3BsYXlOYW1lIjoiS3ViZXJuZXRlcyBJbWFnZSBQdWxsZXIgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU5NQUFBRDBDQVlBQUFBQnJoTlhBQUFBQkdkQlRVRUFBTEdQQy94aEJRQUFBQ0JqU0ZKTkFBQjZKZ0FBZ0lRQUFQb0FBQUNBNkFBQWRUQUFBT3BnQUFBNm1BQUFGM0NjdWxFOEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQWFOa2xFUVZSNDJ1M2RlM1FVOWRrSDhPL3ptOTFFUUswVTc3ZHFWZFRXKysxVjIwS2lnVVNRYWhManNTU2J0cDRlZXFxVkxISUxDY29peVFaRUliRjYxQjZQVlFKNlhpT2tyNlRsWWlBQnI2MDN3SG90YXIxYkJVV1VZRFk3ODd4L0pJR29TY2htWitjM00vdDgvaVM3TTgrTTUrdnM3c3p6L0lpWklZUkludEpkZ0JCK0lXRVN3aVlTSmlGc0ltRVN3aVlTSmlGc0ltRVN3aWFCdnY1QVJMcHJFd0I0ZGRhSlRCUUY4dy9Kc0tiUW1JMHY2NjVKQUwzZFVxSys3ak5KbVBUaU5XT0hXWWhOQjFBT0lMUHJuK01BMzY5TWF6YU5lK0l6M1RXbU13bVRCM0FFeXJ3d3U0U0lid1Z3V0IrditoeEV0NmdnN3FMczFyanVtdE9SaE1ubGVQVWxGNWhrMVJGdzRRRGY4cnJGbUJMTWExMnR1L1owSTJGeUtWNTN5VkdXeVRWZ0xnR1E4SWtub0ltTVFCbmxOTCt0KzFqU2hZVEpaWGpsaEtGVzhLc2JRSmdOWVA4a3R4WURjSTh5aDk1RTQxYnQxSDFzZmlkaGNwSDRtdEVUQ0hRSGdPTnMzdlRIQUVYVU15MzNVUVNXN3VQMEt3bVRDL0RxUzg0eHlhb2w0QmNwM3RVTGlxaU14clk4cGZ1WS9VakNwQkczWkIxc3hmZ21nSzRIWURpMVd3STlTbkdhVHVQWHY2djdIUGlKaEVrRGZ2N2NvUFg1QWRlQitSYUFEdFJVUlJ0QUM5VUI3UXZvNG1kMjZ6NG5maUJoY2xqSDZxd2NSYmdEd0ttNmErbnlBVE5WR3JrdDlVU1FydEFrU0pnY3dxdXlUMlpsTFdMUU9OMjE5Rm9mc01FZ2hHbHM2eWJkdFhpVmhDbkZ1T25udzYyZ0VRSG9PdlR6M0tNN3NBVlN5NVJTMHlsbjNYOTFWK00xRXFZVTRaYXNnQldqYXdHdUFuQ0k3bm9TdEFPTStjb2FVa3ZqVnJYckxzWXJKRXdwMExIbWtrc1VyRm9BcCt1dUpTbk1iekxSMUVCdWE1UHVVcnhBd21Tajd0WUlCaGZwcnNWT0JEUVRVNWp5V2w3UlhZdWJTWmhzMEtNMVlpYUEvWFRYa3lJZEFOK3RNbWdPWmJmdTBGMk1HMG1Za3NBTU10ZGtoNGg0QVlERGRkZmowRkYzdG5yc09PUk91cnJCMUYyTm0waVlCb2xYalQ3ZlZGUkh3RVc2YTlGa2t5SUswOWlXRGJvTGNRc0pVNEtTYlkzd0d3S2FDTlpreXQzNGp1NWFkSk13RFJBL2ZkRVFhMmZtWkJBcUFSeWd1eDUzNldyMStDWSttNjU0Nml2ZDFXZzdDeEttZlV0aGE0VFA4RWVBbXB1dXJSNFNwbjd3NDZQT05pMnFKZEFvM2JWNENST2VNMWlGS1hmOTA3cHJjZlM0SlV6Zng4MlhqckRNK00wT3QwYjRUV2VyQjh5cGxMdnhmZDNGT0hMQUVxWWVKMk5QYXdUbUF2aUI3bnA4WWhlQTIxUUc1bE4yNnplNmkwa2xDVk9YanRWWk9VcHhIWmgrb3JzV24zcWZtV1lIOGxxVzZDNGtWZEkrVEx3cSsyUTIrSFptak5kZFN6b2dvSVVzSTB5WHJkdWl1eGE3cFcyWXVPbm53NjJNd0V3d1R3RW9RM2M5NmFXcjFTTWVuK3FuS2JScEY2YTkwMUd0aFFBZHFydWVOUGNGR0F2VXprTVcwOVVOTWQzRkpDdXR3dFN4ZW5TMkl0UUNkSWJ1V3NTM3ZNRkVOd2JHdHZ4ZGR5SEpTSXN3OFpwUngxaGtWSU01cExzVzBUY0Ntc2sweW1qY3VsZDExeklZdmc1VG1yUkcrRTFucTRjSzNreGptci9VWFV3aWZCa21acEQ1K09pcmlIRWJRTWZxcmtjTXluWVE1bm1wMWNOM1llcHNqVUF0Z1M3V1hZdXdBNytvR0dISzIvQ0U3a3IyV2FsZndzUnJ4eHhwY1d3T2dOOEJKRXVKK2d3QlRXVGhCcnFzOVQrNmErbUw1OFBFanhSbFdBZDk5Z2N3NWtGYUkzeU8yMEQwSnhWRUZXVzNmcTI3bXU5VjUrVXdkYlZHMUFFNFhuY3R3bEVmTWxPRjI2YlFlakpNdkRickxKTlJTOEJvM2JVSWZSajhUME5SR1kxcGZWWjNMWURId3NTcmMzOW8wVGR6cERWQzdPV2VLYlNlQ0ZPUDFvZ0lnSU8wRkNIY3JyUFZ3eHhTbzJzS3JldkQxTFZxUkMyQW56cStjK0ZGVzVtNElqQjJRNFBUTzNadG1MajUwcEZzbXJjemNMblRKMFY0SHpIV0VTRk11YTMvY21xZnJnc1R0MlFkWkhXZ0hJd3dnRXluVG9Ud3BUakE5NnNNcXFUczFtMnAzcGxyd2lTdEVTSjF1cWJRQm5FWFpiZkdVN1lYTjRTcFkxVldsbEtvQlhCbXFnNVVDQUN2VzR3cHdielcxYW5ZdU5ZdzhkK3pqcllDRkpYcHFNSkpCRFNSRVNpam5PYTM3ZHl1bGpEeHlnbERyWXl2WmtCYUk0UTJYVk5vemFFMzBiaFZPMjNab3BOaGt0WUk0VUlmQXhTeFl3cXRZMkhpdFZubmRUMEM5RE9IVDVZUUEvR0NJaXFqc1MxUERYWURLUThUci83RkVSYXBDS1ExUXJoZjV4VGFPRTJuOGV2ZlRmak5xUXJUM3RZSXZnV2dBM1dmSlNFR2p0c0FXcGpvRk5xVWhLbXpOUUsxQVAxWTkya1JJZ2tmTUZQbFFGczliQTBUUHo3cVZMYlVJZ2J5ZEo4RkllekNoRmJEb2pEbHRXenU5M1YyaEVsYUk0VC9kYlY2Y0hBYTVhNzl0TmRYSkJNbWJza0tXREc2RnN6VklCeXMrM0NGY01BT01PWXJhMGp0ZDFzOUJoMm1qclhabHlybVdnQ242VDQ2SVJ6SC9DWVRUUTNrdGpidC9hY0V3OFJyUjUzRWJGUXp1RWozOFFpaEd3SE54QlNtdkpaWEVncVQ5WGoyYldDK1FWYU5FS0luam9GUXBjYTB6dnZ1WHdKOXZ3ZFQ1WGxVSVhwaUM2VCtWeW4xNTk3K0draDBjMEtrSXdiK1lVQ1YwZGlXZndCQWJ4L29KRXhDOUcvQU4zTWxURUwwcXVkRTJaWUJUWlNWTUFueEhRUTBVZHo0WTZJUHdFcVloTmlEWDFTZFUyT2ZITXk3cFUxQ0NNWTJFTUxxeTBNdkdHeVFBTGt5aWZUV3VYS2hOZlFteWt1K25WM0NKTklTQWMya3JNazBadU5yZG0xVHdpVFN6UnRNZEtPUmd0WGVKVXdpWFh3Qnd0ek80WlF0S1JsT0tXRVNmdGM1TnRtMFp0TzRKejVMNVk0a1RNSzNDTHllck1BVXVtemRGaWYySjJIeUJ1NThHa3dtUGczUVc4dzAxY2hyL1Q4bmR5ci9jVnlQWDFRS294VFVCY3dZOUQyUU5MRUx3RnlWZ2RNQ2VTMk9CZ21RSzVON01iWkJvVXJ0T1BST3VyckJCQUJtakRJZkgzMFZnUmFDOFNQZEpib0lnMmlwNnVBWk5MNzFFMTFGOU4wY3VEYmJOU3RicDVuT0c0bjl6TVh1TWI5OUJvQWh1Z3ZXaVFuUEdTYVgwV1Vibm5GMHZ3bDEya3FZSEVkQUU1a3FUT1BXdnpXUTE2ZjV5aUlmTWxQRlFPZmMyVTNDNUY1dk1IaEtJSGZEcXNHOG1kZG1qN1k2Qjk2Y3BmdEFITEFiaER2VTdvNXF1dUtwcjNRVklXRnlueDQzRXBOYjVXN3Zhb3g4SzRERGRCOVlLaERRUkxBbVUrN0dkM1RYSW1GeWo1VGRTT1NXclAydEdLWUJLSWRmMWdsbXZLUkloU2wzL1ViZHBld3BTY0trSDRIWGsrSXdqZG40Y2lyMzQ1TXhiZHRCbUtkMkhMTG5GMDIza0REcHRaV0pLd0pqTnpRNHVkT08xVms1aWxBTDRLZTZUMEFpWlFOOHQxTEJtMmxNODVlNmkrbU5oRW1QWFFCdVMzVEpFanZ4OCtjR3JlMEgvdFlMbzYxN0RuclVYVXQvSkV6T2NzV054RzhWNU9aRkYzb1pRZXhtRWlhSE1QaWZob1d3MHpjU0IxemY0Nk5PWlZNdFprS3U3bHJRUFJ4LzV5R0w2ZXFHbU81aUJrckNsSHBhYnlRbXFuT2hPcW9EY0x6emU5LzNzaTF1MWx0dTVFRlhlK3dHWVlIS3dDbUJ2SllsWGdnU0FBUnlONnhVWHg1eUNnaGhBSTdkQUdWQ3EySjFqakcycGRTTFFlcUxYSm1TUkVBVFdiaUJMbXY5ais1YWtzRnJ4eHhwY1d3T1VydTQ5L3ZNTk5zclYrNyt5TWM4T3pGZVV1QXl5dHZ3aE81U2JEMnN0Vm5ubWN4MUJMcll4cTBPYWhGbU41TXcyY08xTnhMdHdnd3lIeDk5RlRGdUErallaRFpGb0VkSkdkTm9UUE43dW8vTFRoS201TGorUnFMZGVNM1lZUlppMHdITUJMQmZRdThGbmplSXdqUzI1U25keDVHU2N5TmhHaHdDbXNrMHltamN1bGQxMTZJRHJ4bDFqRVZHTlpoREEzajV4d0JGMURNdDkxRUVsdTdhVTNaT0pFd0plNE9KYmd5a1lNYWFGM1dzSHAzZCtXZ1NuZkg5djNJTXdEMzlOVFg2aVlScDRMNEFZNEhYYmlRNllXK3JoN1VRb0VPQnJsODBqVUFaNVRTL3Jicyt4ODZEaEdtZjRnRC9XUm1CbXlsbjNYYmR4YmhaNTZOSjdkTXRxTWVEdWV2WDY2N0g4ZU9YTVBXTmdCYXlqTEJUTTlhRXQvV1dHNWxPMUgwak1hOWxpZTVDaExlbGM1aDZ0RWEwK09KR290QXJIY1BVZVNNUjVsVEszZmkrN21LRWY2UlZtSmp3bk1FcVRMbnJuOVpkaS9DZk5IbHFuRDhDNlBmRzA2MFhTcEJFcXZqOXl0UTFZeTJ1ZGNhYVNBKytEZE9lR1d0ajljOVlFLzRSaVVUVWxyZUNwUUFlK083Zi9CaW1UUXFxekUwejFvUS9GQlRYbkw5bEsyb0J2aGcrRDVQdld5T0VIcis4WnNHUmdVQjhEc0MvUXorL00vZ2hUR25YR2lHY1VWUzBhRWc4czMweXdhd0U2SUI5dmQ3VFlkbzdZNjNWMVRQV2hQY1VocW9tbVB4TkhTVXdiTWFiWWVxYXNXWjRaTWFhOEk0ckoxYWZwUlRxbUdsVW91LzFXcGc2WjZ4WlEydHAzS3AyM2NVSS95Z3FpdnpReXNpWXc0UkJEK2owU0poNnpGakw4ODlvS0tIZnBFbjNCcmUzYmJ2T0JFVUFISlRNdGx3ZkppYTBHcFlLVTI3TFp0MjFDSDhwTEszSjJiWnJleTJJYkZuVXdNMWhlcCtaWmdkeXBUVkMyQ3UvTkRwU01XNW5peSszYy9GU0Y0YXA1NHcxYVkwUTlybnlONUdEakhpd25DMkVPUVVMd2JrcFRGMHoxZ0srbTdFbTlJcEVJbXJ6MW1BSnhlbFdUdUVTcGE0SWs5OW5yQWw5OGtQUjBWdTJvbzZBTTFPOUw4MWg0bzhBTmRmdytZdzE0YnlDNGdWSEEyWVVqQkxBem05R2ZkTVNwcmhGMlBUaHdadmYzVGxpL05VMzN2T2hqaHFFUDAyWUZCa2FiQXZPQU13WkFJWTR1Vy9Idy9UQ0I0ZmdMOCtmZ3Y5K05lUk1BTThWaG1vaXA1L1FmbDhrRXBFcmswZ0NVMzVvL2xYVXhnc0IvRWhIQlk2Tit2cmd5LzN4d1BNblkvTkhJM3I3OC9OZ2hGY3NxNUR2VENKaFYwNnNPVmNwcmdQd002ZjJ1YngrMXZjK09xYjh5dlIxZXdBTkw1K0kxYThmQTR2Ny9PaDZIZ2hQRkpaRUgxVktUV3RZVWk2LzVvbDlLaWlwUGdKQVpGK3RFVTVKMlpYSnRBZ3RieDJGaHplZGlKM2ZaQ1R5MWphQUZ4NFk2Smovd0FNUnVjOGt2cWVvS0pKaFpRYi9ZSUZ1SWVCQUhUWDBkbVZLU1pwZi9tUUVadnp0SXR6NzdFOFNEUklBREFWb3pzNTR4ci96UzZwTEFYYmtseGpoRFlXaHFnbG1ac1pyREtyVkZhUysySHBsK25qblVEeTg2VVE4OCs3aHRoWElRQ3Vnd28xTHkrWFp2RFJXK0t2b0tXeGdNWUE4M2JVQUtmek85RTJIZ1pXdkhZZkdsNDlIaDJYdnhZNkFMTUI2c2FBNHVveFZjRnBqL1hSNWFqeU45R2lOdUE3YTc0djJMNmtyRXdONDRwMGpVZi9DU096WW5mREh1Y0hZd2FENTN3d2ZWcnZxVDVPbG44bkhzcklpZ1JISFpGN0xiRlVEZExEdWVyN0wxdTlNLzk3MkExU3UraC84NmNuVG5Bb1NBQnhFNFBsRHZ2aDZTMzV4OUhLbmRpcWNkVlZ4OWFVampzNTRrWm52ZFdPUStwTHdaWE43MjM1NCtLV1RzUEdkdzhINmZoc1lTWVNWQmNYUlpncW84UElIeTJVR2hBOFVsZFNjYUlHakZsQ2t1NWJCR0hDWTJrMkZ4MTQ1SG45OTVUakU0b1BxNnJVZklZZE42NlhDNHVqZFpqQTI1NjhQUkhib0xra2tMaFJhT0d3WHg2YWI0SEtrb0RYQ0tmdjh6c1JNZVBhOXcxRC93a2g4dGl1aEJiY2RQaEo4VHN5M3FQYVQ3bXhvdUZybTVua0NVMzVKTkVTZ0JRRHMrd25ZQWIxOVorbzNURzl0UHhBUFBuOHlYdnQwdU83YUU4Q3ZFV0hLOHZyS05ib3JFWDI3Y21MVkJVb1pkUUJmcUx1V3dVam9wL0c3bmo0Tkc5NDZBdXpNMCtzMm9sT1pzYm93RkcxU01DYzMxTjhrczhaZHBLaTA2aWpUVkRVZ2xQanRobnlmWVdwOTYwamR0U1dGR1plYk1NWVdGa2Z2NmNnMFpqOTIvMHhaQlVPajd1bW9wc1d6UWRoZmR6MnBvUDNod0JUTFlNTGtRTXg4dlRCVU15a1NpZmo5ZUYycE1GUTF3Y3o0NWxVQ3p3ZjhHU1RBLzJIcWRpUXozN3RsYThhelY1VlVYYXk3bUhSUlVGSjlUbjVKZENPemVneUU0M1RYazJxdWZqd2pCYzYzb0o2VVZvL1V5aStOamxBbWJtYmdlaHJrZEZRdlNyY3dBUUF4VUdSYTFyaUNrdXJicE5YRFB0M1RVZG5DWENiOFFIYzlUa3VYajNtOUdRYlFuSjFteHB1ZHJSNGlHWVdsTlRtZnRXM2Z4S0JhSVAyQ0JLVG5sZW5iR01jUTZNR0NVUFEzUkJ4ZXZxUnlpKzZTdktTb1pON0pKb3hGYlBFNFgvM09QUWdTcG02TWJHWjZTVm85Qm1iOHhKcmgreWxycGdtYUFzQ3hKNTNkVE1MMGJRcUVrT0tPeS9OTGFoWUUydHNYTnpSRVlycUxjcE05MDFIQkN4bDBxTzU2M0NTZHZ6UDFpWUhoQko1dlptYThYRkJTUFY1M1BXNVJNTEU2ZTh2V2pKY0k5Q0FBQ2RKM3lKV3BmeU1CYWlvb2pqWWJRRm5Ec29wWGRSZWt3eFhYVkIxakdLb2FoSkR1V3R4TXdqUVFoQndUMkZSWUhMMWJ4ZFRORFEzbGFiRVFkWGRyQkVBekFiaTRaY0FkNUdQZXdBV1pNTm5NdE40cUxLa3VLeXA2eE1jM0k1bnlRelZGdTdqalZZRG1RSUkwSUJLbXhJMWdVSzJadWZXNWdvbnpFMTVFMk8wS2ltdk9MeWlaL3lReFB3TGdXTjMxZUlsOHpCdThzNkdzRFg1cDlmamxOUXVPREFUaWM5d3lIZFdMSkV4SjZtcjF1TFN3cFBxT2pveEF0ZGRhUGJxbm96TE1lUUFkb0xzZUw1UC9BOWxqQ0lObUJtTG1hMTZhUXRzMUhmWDFya2VBSkVoSmtpdVR2WTRpMElNRkpUVi9aQlV0YTF4UzhZenVnbnFUSDFwd0tsbm1ZbWJrNnE3RlR5Uk1xWEUrV1hpcW9EaTYxQWdHWmpROE1PTVQzUVVCUGFhanNuazlLSDFhSTV3aVlVb2RBaUZreHVNRnVsczlKazI2TjdoOTkrZS9OZG1xQnVDWm9ZNWVJOStaVW05WTE2b2VMK2VIYWh3ZnJsaFlXcE96YmRmMmw3dzJIZFdMNU1ya25CT0orWkdDa3VoNlVqd2wxYTBlaFJQbm5RVERXTVFXWCs2NUFWTWVKV0Z5M2lWczBRc0ZKZFgzRzBHYTNmQ1hpcy9zM1BpVnY0a2NaTVNENVF3S2c3MDdIZFdMSkV4NkJBQ2FaSFdneUs1V2p6MnRFWEc2bFlIRGRCOWdPcEx2VEJwMXQzckVNek8zRklhaTR3YTduZnhRZFBUTFd6TmU2R3FOa0NCcElsY21GeUR3eWN6NFcwRnh0Sm1WTWJteGZ1WnJBM2xmUWZHQ293RXpDa1lKUTc0WjZTWmhjaE5DRHJHNXViQTRlbmNiWWpldFdoYloyZHZMSmt5S0RBMjJCV2NBNWd3QVEzU1hMVHJKeHp6M0NUSmg4aEFLOXRMcTBka2FFV3pMNkc2TmtDQzVTSityWUJTR2FoSmVJRnFreElzS0NNY3RhbE9LNndEOFRIZEJJb1VMUkl1VU9zY0NOaWpGRFBrazRXb1NKbThneUE4TXJpZi9weFBDSmhJbUlXd2lZUkxDSmhJbUlXd2lZUkxDSmhJbUlXd2lZUkxDSmhJbUlXd2lZUkxDSmhJbUlXd2lZUkxDSmhJbUlXelNkNWlJYmdjZ1MxQUs4VzJ4cm14OFQ1OWhXbEUvYXhwWjVta0VOT2l1WGdoWFlEU1RvYzVaVVQ5cldtOS83ck01a0dqdkUvOVhGVmRmYWhIVkFqaE45L0VJb2NHYkFOKzRZbW5sMzdyL29iZmNEQ2hNQUpDVkZRbU1PQ2J6V21hcldpYURpalN4ZzBIemV4dkZsbFNZdXUwWi9rNjREdEpjS1B6SkFtTVpxK0MweHZycG4vYjJBbHZDMUszd1Y5RlQyTUJpQUhtNmoxd0l1ekRRQ3FodzQ5THl6ZjIrenM0d2RTc01WVTFnVnJVQWZxejdSQWd4YUlUM21YbDI0OUxLSlFONWVXKzVTZm8rMC9MNjJTdU45dGlwQkE0enNEUFo3UW5oc0RhQTV4NW94RVlPTkVoOVNmcksxRk5CU2ZVUkFDSUF5U0xEd3UyWWdFZVZVdE1hbHBTL2wvQ2JVL0V4cnpkWFRxdzVWMmE4Q1JkN0hvendpbVVWVHcxMkE0NkZxV3QzbEIrYWZ4VXhMd1R3SXlmUGxCQjkrSmlJSXFlZjBINWZKQkt4a3RtUXcySHF0SGN1TnNsY2JLRkxqQmozOURlL1BWRmF3dFJ0ejRvTmhCTElRRVhoRUNJMHdhU3k1US9OZXR2TzdXb05VN2Y4VUhRME1lb0FuSm1TSFFnQkFJVFhtV2xLNDlKWnExT3grWlQ4Tko2b3h2cUtEV2VjR0R1SHdiOEc4RituOXk5OGp2QTVnY09mdng4N1BWVkI2blBYVGwrWmV2clcrcXVROVZkRlV1SUEzOTloWmxhdWZIamF0bFR2ekJVZjgzcVRYeG9kcVJpM00rTnl4M1lxZklPQmRTQU9OOVpYL3N1eGZibzFUTjBLUzJ0eTJPUmFFSDdxK002RkI5Ry9tVkRaV0QvTDhaNDdWM3huNnMveUpiT2FEeDQyNG13aStqM0FLYjlVQzgvNkd1QzV1NGNQTzExSGtQcmlxaXRUVHoxYVBhNEhZQ1M5UWVFSEZoakw0aFpQZit6aFNxMC9Ycm4rWTE1djhrTUxUaVhMWEF4Q3J1NWFoRWFFZjhLeXlsWXNtLzJzN2xJQWo0YXBXMWVyUngyQTQzWFhJaHoxSVlNckdwZFcxQVBrbW5XV1hmK2RxVDlkclI2bkVEZ000Q3ZkOVlpVWF5UHdBcU05ZGtwbmE0UjdndFFYejF5WmV2cmxOUXVPREFUaWM2VFZ3NStJMEdRYWRNTmZINWoxSDkyMTlNWFRIL042VXhpcU9vL1pxQVA0WXQyMUNGdThxSUR3bzBzcm50QmR5TDc0TGt4ZGg5WGQ2bkViZ0dOMVZ5TUdnN2NSVUtYYVQ3cXpvZUZxVTNjMUE2clluMkhxRkFvdEhMYUxZOU1CbWdsZ1A5MzFpQUhwSU1iZGRyWkdPTVhYWWVwMnhUVlZ4eGlHcWdZaHBMc1cwUTlHTXl0amNtUDl6TmQwbHpLbzh0TWhUTjBLSmxablExRXRnRE4wMXlMMll0QWJpdmpHNWZVVmY5ZGRTMUxINGVXZnhoTzE0cUhLbGpOT2pKM2QxZXJ4YWRJYkZFa2g0QXNHbFFmYTI4L3dlcEQ2UEVhL1hwbDY2dEhxTVFWQWh1NTYwb3dGeGpJakExTWIvbEx4bWU1aTdKSldIL042azE4YUhVa1dMUUo0dk81YTBnS2hoWWpEeTVkVWJ0RmRpdDNTUGt6ZENrdHJjaXlMNndqNGllNWFmT285QnQrVTdGQkhOMHVyNzB6OVdiNWtWdk1oUTBlYzFmVm8wcGU2Ni9HUlhRRFBQVEFRTzluUFFlcExXbDZaZXNvdmpZNVFKbTZXVm8ra01CaExqV0JnUnNNRE16N1JYWXdqQnl3ZjgvcFdXRnB6Tmx0V0xVQ2pkTmZpTWMreFFsbmprb3BuZEJmaUpBblRBRWlyeDRCOXhPQlpibXVOY0lxRWFZQ0tpaFlOaVdlMlR5WndKWUFEZE5mak1yc0pmRWRIUnFENnNmdG5wbTByaklRcFFVV2xWVWVacHFxUktiU2RpTkNrWUU1dXFML3BIZDIxNkNaaEdxU0M0cHJ6QWE0RDRTTGR0V2p5RWl3Vlh2RlErVWJkaGJpRmhDa3BUUGtsMFJDQkZnQTRYSGMxRHRsTzRIbGVhbzF3aW9USkJtblM2dEZCakx0VlROM2MwRkF1OStGNklXR3kwWlcvbm5lQ1lSbzFEQlRwcnNWV2pHWUtxUER5Qjh0ZjBWMkttMG1ZVWlBL1ZITUpNUytHOTFzOTNtVEcxTVpsRlUyNkMvRUNlWndvQlJyclo2M3YwZXJoeGFlaWR6Q29mUGZ3L2MrUUlDVkhya3cyR2oreFp2aCt5cHJwa1ZZUEM0eGxySUxUR3V1blM3OVhndVJqbmtPS1N1YWRiTUpZQkdDYzdscDZ3MEFyb01LTlM4czM2NjdGcXlSTURpc3NyY2xoeTdvRG9GTjExOUxsQXdaWHB1c2pRSGFTNzB3T1c3NWtWdlBCUXc4KzB3V3RIbTFkclJFbmVXVTZxaGZKbGNraG1sbzltSUJIMmJLbXIzaG85cnU2ejRHZnlNYzhGeWdvcVQ2SFFiVUUvQ0tWK3lIQ0MyeWhiTVd5aXFkMEg3TWZTWmhjcERCVU5ZRXRkUWNJeDltODZZK0pLSEw2Q2UzM1JTSVJTL2R4K3BXRXlXVW1USW9NRGJSbDNrRGcyUUQyVDNKek1XTGM0OFhwcUY0a1lYS3BaRnM5aU5BRWs4cVdQelRyYmQzSGtpNGtUQzUzNWNTcUM1UXk2Z0MrY0VCdklMek9URk1hbDg1YXJidjJkQ05oOG9RQnRIb1FQaWZtVzdaLzBIRlhhMnNrcnJ2aWRDUmg4cEFlclI3bEFESzcvamtPOFAwZFptYmx5b2VueVdyMEdrbVlQS2h3NHJ5VFlCaUwyRUtRbFRIRnE2dEcrRTFDWVJKQ0pFWWVKeExDSmhJbUlXd2lZUkxDSmhJbUlXd2lZUkxDSnY4UDlzWGhDN3hFNGtJQUFBQWxkRVZZZEdSaGRHVTZZM0psWVhSbEFESXdNVGt0TURRdE1UTlVNRGc2TVRZNk1EZ3JNREk2TURDY1laVmFBQUFBSlhSRldIUmtZWFJsT20xdlpHbG1lUUF5TURFNUxUQTBMVEV6VkRBNE9qRTJPakE0S3pBeU9qQXc3VHd0NWdBQUFBQkpSVTVFcmtKZ2dnPT0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiYXV0aGVudGljYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJ0b2tlbnJldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJzdWJqZWN0YWNjZXNzcmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJrdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJrdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7Im5hbWUiOiJrdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJsYWJlbHMiOnsibmFtZSI6Imt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1zZWN1cmUtbGlzdGVuLWFkZHJlc3M9MC4wLjAuMDo4NDQzIiwiLS11cHN0cmVhbT1odHRwOi8vMTI3LjAuMC4xOjgwODAvIiwiLS1sb2d0b3N0ZGVycj10cnVlIiwiLS12PTEwIl0sImltYWdlIjoicXVheS5pby9icmFuY3ova3ViZS1yYmFjLXByb3h5OnYwLjExLjAiLCJuYW1lIjoia3ViZS1yYmFjLXByb3h5IiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjg0NDMsIm5hbWUiOiJodHRwcyJ9XSwicmVzb3VyY2VzIjp7fX0seyJhcmdzIjpbIi0taGVhbHRoLXByb2JlLWJpbmQtYWRkcmVzcz06ODA4MSIsIi0tbWV0cmljcy1iaW5kLWFkZHJlc3M9MTI3LjAuMC4xOjgwODAiLCItLWxlYWRlci1lbGVjdCJdLCJjb21tYW5kIjpbIi9tYW5hZ2VyIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5hbm5vdGF0aW9uc1snb2xtLnRhcmdldE5hbWVzcGFjZXMnXSJ9fX0seyJuYW1lIjoiUE9EX05BTUUiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZSJ9fX0seyJuYW1lIjoiT1BFUkFUT1JfTkFNRSIsInZhbHVlIjoia3ViZXJuZXRlcy1pbWFnZS1wdWxsZXItb3BlcmF0b3IifV0sImltYWdlIjoicXVheS5pby9lY2xpcHNlL2t1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yOjEuMC41IiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibGl2ZW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvaGVhbHRoeiIsInBvcnQiOjgwODF9LCJpbml0aWFsRGVsYXlTZWNvbmRzIjoxNSwicGVyaW9kU2Vjb25kcyI6MjB9LCJuYW1lIjoia3ViZXJuZXRlcy1pbWFnZS1wdWxsZXItb3BlcmF0b3IiLCJyZWFkaW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvcmVhZHl6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjUsInBlcmlvZFNlY29uZHMiOjEwfSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiIxMDBtIiwibWVtb3J5IjoiMUdpIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiI2NE1pIn19fV0sInNlcnZpY2VBY2NvdW50TmFtZSI6Imt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIiwidGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMiOjEwfX19fV0sInBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyIsInNlcnZpY2VzIiwic2VydmljZXMvZmluYWxpemVycyIsImVuZHBvaW50cyIsInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMiLCJldmVudHMiLCJjb25maWdtYXBzIiwic2VjcmV0cyIsInNlcnZpY2VhY2NvdW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJyb2xlcyIsInJvbGViaW5kaW5ncyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiLCJkYWVtb25zZXRzIiwicmVwbGljYXNldHMiLCJzdGF0ZWZ1bHNldHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiZ2V0IiwiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiY2hlLmVjbGlwc2Uub3JnIl0sInJlc291cmNlcyI6WyIqIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJldmVudHMiXSwidmVyYnMiOlsiY3JlYXRlIiwicGF0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJrdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiY2hlIiwia3ViZXJuZXRlcy1pbWFnZS1wdWxsZXIiXSwibGFiZWxzIjp7ImFwcCI6Imt1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIn0sImxpbmtzIjpbeyJuYW1lIjoiUmVwb3NpdG9yeSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9jaGUtaW5jdWJhdG9yL2t1YmVybmV0ZXMtaW1hZ2UtcHVsbGVyLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJpYnV6aXVrQHJlZGhhdC5jb20iLCJuYW1lIjoiSWx5YSBCdXppdWsifSx7ImVtYWlsIjoiYWJhemtvQHJlZGhhdC5jb20iLCJuYW1lIjoiQW5hdG9saWkgQmF6a28ifV0sIm1hdHVyaXR5Ijoic3RhYmxlIiwicHJvdmlkZXIiOnsibmFtZSI6IlJlZCBIYXQsIEluYy4iLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vY2hlLWluY3ViYXRvci9rdWJlcm5ldGVzLWltYWdlLXB1bGxlci1vcGVyYXRvciJ9LCJyZXBsYWNlcyI6Imt1YmVybmV0ZXMtaW1hZ2VwdWxsZXItb3BlcmF0b3IudjEuMC40Iiwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiYXBwIjoia3ViZXJuZXRlcy1pbWFnZS1wdWxsZXItb3BlcmF0b3IifX0sInZlcnNpb24iOiIxLjAuNSJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibWV0cmljcy1yZWFkZXIifSwicnVsZXMiOlt7Im5vblJlc291cmNlVVJMcyI6WyIvbWV0cmljcyJdLCJ2ZXJicyI6WyJnZXQiXX1dfQ==
relatedImages:
- image: quay.io/brancz/kube-rbac-proxy:v0.11.0
  name: ""
- image: quay.io/eclipse/kubernetes-image-puller-operator-bundle:1.0.5
  name: ""
- image: quay.io/eclipse/kubernetes-image-puller-operator:1.0.5
  name: ""
schema: olm.bundle
